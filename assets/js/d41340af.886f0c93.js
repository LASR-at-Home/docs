"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[5734],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,u=m["".concat(s,".").concat(d)]||m[d]||k[d]||l;return a?n.createElement(u,i(i({ref:t},c),{},{components:a})):n.createElement(u,i({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4436:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={},i="unsafe_traversal",o={unversionedId:"packages/unsafe_traversal",id:"packages/unsafe_traversal",title:"unsafe_traversal",description:"Includes action to move between two points unsafely and service to switch to unsafe",source:"@site/docs/packages/unsafe_traversal.md",sourceDirName:"packages",slug:"/packages/unsafe_traversal",permalink:"/docs/packages/unsafe_traversal",draft:!1,editUrl:"https://github.com/lasr-at-home/base/blob/main/common/document_lasr/web/docs/packages/unsafe_traversal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"train_dataset_model",permalink:"/docs/packages/train_dataset_model"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Service Usage",id:"basic-service-usage",level:3},{value:"Action Usage",id:"action-usage",level:3},{value:"Test Plan Viability",id:"test-plan-viability",level:3},{value:"Example",id:"example",level:2},{value:"Technical Overview",id:"technical-overview",level:2},{value:"ROS Definitions",id:"ros-definitions",level:2},{value:"Launch Files",id:"launch-files",level:3},{value:"Messages",id:"messages",level:3},{value:"Services",id:"services",level:3},{value:"<code>DeterminePathViability</code>",id:"determinepathviability",level:4},{value:"<code>LaserDist</code>",id:"laserdist",level:4},{value:"<code>ChangeTraversalParameters</code>",id:"changetraversalparameters",level:4},{value:"Actions",id:"actions",level:3},{value:"<code>MoveToGoal</code>",id:"movetogoal",level:4},{value:"<code>AlignToGoal</code>",id:"aligntogoal",level:4}],c={toc:p},m="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"unsafe_traversal"},"unsafe_traversal"),(0,r.kt)("p",null,"Includes action to move between two points unsafely and service to switch to unsafe\nparameters."),(0,r.kt)("p",null,"This package is maintained by:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"mailto:me@insrt.uk"},"Paul Makles"))),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This package depends on the following ROS packages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"catkin (buildtool)"),(0,r.kt)("li",{parentName:"ul"},"message_generation (build)"),(0,r.kt)("li",{parentName:"ul"},"message_runtime (exec)"),(0,r.kt)("li",{parentName:"ul"},"rospy"),(0,r.kt)("li",{parentName:"ul"},"rosservice"),(0,r.kt)("li",{parentName:"ul"},"actionlib"),(0,r.kt)("li",{parentName:"ul"},"dynamic_reconfigure"),(0,r.kt)("li",{parentName:"ul"},"geometry_msgs"),(0,r.kt)("li",{parentName:"ul"},"actionlib_msgs"),(0,r.kt)("li",{parentName:"ul"},"nav_msgs")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Run the node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rosrun unsafe_traversal unsafe_traversal\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Warning"),' Any interactions with this node should be done in a "stop the world" fashion whereby all other processes which have the potential to move the robot must cease in order to minimise the potential of a crash.')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Warning")," \u2757 This service does not currently tuck the arm or change the speed of the robot.")),(0,r.kt)("h3",{id:"basic-service-usage"},"Basic Service Usage"),(0,r.kt)("p",null,"Switch to unsafe mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rosservice call /unsafe_traversal/set_unsafe_traversal true\n")),(0,r.kt)("p",null,"Switch back:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rosservice call /unsafe_traversal/set_unsafe_traversal false\n")),(0,r.kt)("p",null,"Or use the helper script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rosrun unsafe_traversal test_service\n")),(0,r.kt)("h3",{id:"action-usage"},"Action Usage"),(0,r.kt)("p",null,"This node provides two actions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/unsafe_traversal/move_to_goal")," (",(0,r.kt)("inlineCode",{parentName:"li"},"unsafe_traversal.msg.MoveToGoalAction"),"): move to start pose aligned to the end pose then move to the end pose"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/unsafe_traversal/align_to_goal")," (",(0,r.kt)("inlineCode",{parentName:"li"},"unsafe_traversal.msg.AlignToGoalAction"),"): align from start pose to end pose")),(0,r.kt)("p",null,"You can test these by editing ",(0,r.kt)("inlineCode",{parentName:"p"},"test_move_action")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"test_align_action")," in the scripts folder."),(0,r.kt)("h3",{id:"test-plan-viability"},"Test Plan Viability"),(0,r.kt)("p",null,"To test whether a plan is viable (can be traversed in a straight line), you can use the viability service."),(0,r.kt)("p",null,"This provided under the service ",(0,r.kt)("inlineCode",{parentName:"p"},"/unsafe_traversal/check_if_plan_is_viable"),"."),(0,r.kt)("p",null,"You must provide:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# starting position\ngeometry_msgs/PoseStamped start_pose\n\n# end position\ngeometry_msgs/PoseStamped end_pose\n")),(0,r.kt)("p",null,"And you will get back:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# check if viable\nbool viable\n\n# the difference between ideal and real plans\nfloat64 raw_error\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Ask the package maintainer to write a ",(0,r.kt)("inlineCode",{parentName:"p"},"doc/EXAMPLE.md")," for their package!"),(0,r.kt)("h2",{id:"technical-overview"},"Technical Overview"),(0,r.kt)("p",null,"Ask the package maintainer to write a ",(0,r.kt)("inlineCode",{parentName:"p"},"doc/TECHNICAL.md")," for their package!"),(0,r.kt)("h2",{id:"ros-definitions"},"ROS Definitions"),(0,r.kt)("h3",{id:"launch-files"},"Launch Files"),(0,r.kt)("p",null,"This package has no launch files."),(0,r.kt)("h3",{id:"messages"},"Messages"),(0,r.kt)("p",null,"This package has no messages."),(0,r.kt)("h3",{id:"services"},"Services"),(0,r.kt)("h4",{id:"determinepathviability"},(0,r.kt)("inlineCode",{parentName:"h4"},"DeterminePathViability")),(0,r.kt)("p",null,"Request"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"start_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"starting position")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"end_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"end position")))),(0,r.kt)("p",null,"Response"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"viable"),(0,r.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"check if viable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"raw_error"),(0,r.kt)("td",{parentName:"tr",align:"center"},"float64"),(0,r.kt)("td",{parentName:"tr",align:null},"the difference between ideal and real plans")))),(0,r.kt)("h4",{id:"laserdist"},(0,r.kt)("inlineCode",{parentName:"h4"},"LaserDist")),(0,r.kt)("p",null,"Request"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"fov_degrees"),(0,r.kt)("td",{parentName:"tr",align:"center"},"float32"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"Response"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"dist"),(0,r.kt)("td",{parentName:"tr",align:"center"},"float32"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"changetraversalparameters"},(0,r.kt)("inlineCode",{parentName:"h4"},"ChangeTraversalParameters")),(0,r.kt)("p",null,"Request"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"unsafe"),(0,r.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"Response"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description")))),(0,r.kt)("h3",{id:"actions"},"Actions"),(0,r.kt)("h4",{id:"movetogoal"},(0,r.kt)("inlineCode",{parentName:"h4"},"MoveToGoal")),(0,r.kt)("p",null,"Goal"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"start_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"first point to start at")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"end_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"second point to move to")))),(0,r.kt)("p",null,"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"success"),(0,r.kt)("td",{parentName:"tr",align:"center"},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"result")))),(0,r.kt)("p",null,"Feedback"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description")))),(0,r.kt)("h4",{id:"aligntogoal"},(0,r.kt)("inlineCode",{parentName:"h4"},"AlignToGoal")),(0,r.kt)("p",null,"Goal"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"start_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"first point to position at")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"end_pose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"geometry_msgs/PoseStamped"),(0,r.kt)("td",{parentName:"tr",align:null},"second point to face towards")))),(0,r.kt)("p",null,"Result"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description")))),(0,r.kt)("p",null,"Feedback"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description")))))}k.isMDXComponent=!0}}]);